version: '3.9'


x-kong-envs: &kong_envs
  KONG_ADMIN_ACCESS_LOG: /dev/stdout
  KONG_ADMIN_ERROR_LOG: /dev/stderr
  KONG_ADMIN_LISTEN: "0.0.0.0:8001"
  KONG_ANONYMOUS_REPORTS: off
  KONG_CLIENT_BODY_BUFFER_SIZE: 15m
  KONG_DATABASE: postgres
  KONG_LOG_LEVEL: debug
  KONG_PG_TIMEOUT: 5000
  KONG_PG_USER: postgres
  KONG_PG_PASSWORD: secret
  KONG_PG_DATABASE: postgres
  KONG_PREPARE: on
  KONG_PROXY_ACCESS_LOG: /dev/stdout
  KONG_PROXY_ERROR_LOG: /dev/stderr
  KONG_PROXY_STREAM_ACCESS_LOG: /dev/stdout
  KONG_PROXY_STREAM_ERROR_LOG: /dev/stderr

x-kong-envs-ssl: &kong_envs_ssl
  <<: *kong_envs  
  KONG_PG_SSL: on
  KONG_PG_SSL_REQUIRED: on
  KONG_PG_SSL_VERIFY: on   
  KONG_PG_SSL_CERT: /usr/local/share/ca-certificates/client.crt
  KONG_PG_SSL_CERT_KEY: /usr/local/share/ca-certificates/client.key
  KONG_LUA_SSL_TRUSTED_CERTIFICATE: system,/usr/local/share/ca-certificates/server.crt
  KONG_LUA_SSL_VERIFY_DEPTH: 1

x-kong-defaults: &kong_defaults 
  build:
    dockerfile: kong.Dockerfile
    args:
      PG_EXTERNAL_HOST: postgres
      PG_EXTERNAL_PORT: 5432
  networks:
    - kong-postgres
  healthcheck:
    test: ["CMD", "curl", "-f", "http://kong:8001"]
    interval: 5s
    timeout: 2s
    retries: 15

services:
  postgres:
    build:
      dockerfile: pgsql.Dockerfile
    command: > 
      -c ssl=on
      -c ssl_cert_file=/var/lib/postgresql/server.crt
      -c ssl_key_file=/var/lib/postgresql/server.key
    networks:
      - kong-postgres
    environment:
      POSTGRES_PASSWORD: secret
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
        test: ["cmd", "pg_isready", "-u", "kong"]
        interval: 5s
        timeout: 5s
        retries: 5

  nginx-postgres-proxy:
    build:
      dockerfile: nginx.Dockerfile
    networks:
      - kong-postgres
    ports:
      - 5431:5431
    depends_on:
      - postgres

  haproxy-pg-proxy:
    build:
      dockerfile: haproxy.Dockerfile
    networks:
      - kong-postgres
    ports:
      - 5433:5433
    depends_on:
      - postgres

  kong-migrations:
    <<: *kong_defaults
    environment:
      <<: *kong_envs_ssl
      KONG_PG_HOST: postgres
      KONG_PG_PORT: 5432
    command: >
      sh -c "kong migrations bootstrap --db-timeout 300 --vv &&
             kong migrations up &&
             kong migrations finish"
    depends_on:
      - postgres

  kong:
    <<: *kong_defaults
    environment:
      <<: *kong_envs_ssl
      KONG_PG_HOST: postgres
      KONG_PG_PORT: 5432
    depends_on:
      - postgres
      - kong-migrations
    ports:
      - 8000:8000
      - 8001:8001
      - 8003:8003

  kong-nginx-pg-proxy:
    <<: *kong_defaults
    environment:
      <<: *kong_envs
      KONG_PG_HOST: nginx-postgres-proxy
      KONG_PG_PORT: 5431
    depends_on:
      - postgres
      - nginx-postgres-proxy
      - kong-migrations
    ports:
      - 8100:8000
      - 8101:8001

  kong-local-pg-proxy:
    <<: *kong_defaults
    environment:
      <<: *kong_envs
      POSTGRES_STREAM_PROXY: on
      KONG_PG_HOST: postgres
      KONG_PG_PORT: 5432
    depends_on:
      - postgres
      - kong-migrations
    ports:
      - 8200:8000
      - 8201:8001

  kong-haproxy-pg-proxy:
    <<: *kong_defaults
    environment:
      <<: *kong_envs_ssl
      KONG_PG_HOST: haproxy-pg-proxy
      KONG_PG_PORT: 5432
    depends_on:
      - postgres
      - haproxy-pg-proxy
      - kong-migrations
    ports:
      - 8300:8000
      - 8301:8001


networks:
  kong-postgres:
    name: kong-postgres

volumes:
  pg-data: